{"version":3,"sources":["utils/constants.js","utils/helpers.js","components/Movie/styles.js","components/Movie/Movie.jsx","components/MoviesList/styles.js","components/MoviesList/MoviesList.jsx","utils/api.js","hooks/use-debounce.js","reducers/action-types.js","reducers/app-reducer.js","App.js","reportWebVitals.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","TABS","LIST","getImage","link","getStorage","key","JSON","parse","localStorage","getItem","Container","styled","div","SwitchContainer","Image","img","Details","checkList","name","movie","filter","el","id","length","Movie","updateStateList","poster_path","original_title","overview","useState","watchLater","favourite","lists","setLists","checkLists","updateList","listName","updatedList","hasMovie","savedList","obj","storageElement","withoutElement","setItem","stringify","removeStorage","push","addStorage","useEffect","src","alt","checked","onChange","MoviesList","movies","map","API_KEY","getUrl","resource","query","getData","a","url","fetch","response","json","result","console","error","getMoviesPopular","getMoviesByName","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","SET_MOVIES","SET_SEARCH_VALUE","SET_LOADING","UPDATE_STATE_LIST","initialState","favourites","searchValue","tabName","loading","appReducer","state","action","type","log","Error","TabPane","Tabs","Search","Input","StyledSearch","App","useReducer","dispatch","debounced","getMovies","callback","then","results","placeholder","e","target","allowClear","defaultActiveKey","tab","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.add39798.chunk.js","sourcesContent":["const size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px',\n};\n\nexport const device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`,\n};\n\nexport const TABS = {\n    POPULAR: 'Popular movies',\n    RESULTS: 'Search results',\n    FAVOURITES: 'Favourites',\n    LATER: 'Watch later',\n};\n\nexport const LIST = {\n    WATCH_LATER: 'watchLater',\n    FAVOURITES: 'favourites',\n};\n","export const getImage = (link, size = 'w500') =>\n    `https://image.tmdb.org/t/p/${size}${link}`;\n\nexport const addStorage = (key, obj) => {\n    let storageElement = JSON.parse(localStorage.getItem(key)) || [];\n\n    if (!storageElement.filter((el) => el.id === obj.id).length) {\n        storageElement.push(obj);\n    }\n    localStorage.setItem(key, JSON.stringify(storageElement));\n};\n\nexport const removeStorage = (key, obj) => {\n    const storageElement = JSON.parse(localStorage.getItem(key)) || [];\n\n    if (storageElement.filter((el) => el.id === obj.id).length) {\n        const withoutElement = storageElement.filter((el) => el.id !== obj.id);\n        localStorage.setItem(key, JSON.stringify(withoutElement));\n    }\n};\n\nexport const getStorage = (key) => JSON.parse(localStorage.getItem(key)) || [];\n","import styled from 'styled-components';\nimport { device } from '../../utils/constants';\n\nexport const Container = styled.div`\n    display: flex;\n    margin-bottom: 40px;\n\n    @media ${device.tablet} {\n        width: 50%;\n    }\n`;\n\nexport const SwitchContainer = styled.div`\n    height: 15%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    @media ${device.laptopL} {\n        height: 10%;\n    }\n`;\n\nexport const Image = styled.img`\n    height: 20vh;\n    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.15);\n    border-radius: 5px;\n\n    @media ${device.laptopL} {\n        height: 40vh;\n    }\n`;\n\nexport const Details = styled.div`\n    padding: 0 40px 0 20px;\n    display: flex;\n    flex-direction: column;\n\n    h1 {\n        font-size: 1.1rem;\n        font-weight: bold;\n\n        @media ${device.laptop} {\n            font-size: 1.4rem;\n        }\n    }\n\n    p {\n        height: 15vh;\n        overflow: hidden;\n        position: relative;\n        margin: 0;\n\n        @media ${device.laptopL} {\n            height: 25vh;\n        }\n\n        &::after {\n            content: '';\n            display: block;\n            width: 100%;\n            height: 40%;\n            background-image: linear-gradient(\n                to bottom,\n                rgba(255, 255, 255, 0) 10%,\n                rgba(255, 255, 255, 1) 85%\n            );\n            position: absolute;\n            bottom: 0;\n        }\n    }\n`;\n","import { Switch } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { LIST } from '../../utils/constants';\nimport {\n    addStorage,\n    getImage,\n    getStorage,\n    removeStorage,\n} from '../../utils/helpers';\nimport { Container, Details, Image, SwitchContainer } from './styles';\n\nconst Movie = ({ movie, updateStateList }) => {\n    const { poster_path, original_title, overview } = movie;\n\n    const [lists, setLists] = useState({\n        watchLater: false,\n        favourite: false,\n    });\n\n    const onChangeWatchLater = () => {\n        updateList(LIST.WATCH_LATER, movie);\n        checkLists();\n    };\n\n    const onChangeFavourites = () => {\n        updateList(LIST.FAVOURITES, movie);\n        checkLists();\n    };\n\n    const checkLists = () => {\n        setLists({\n            watchLater: checkList(LIST.WATCH_LATER, movie),\n            favourite: checkList(LIST.FAVOURITES, movie),\n        });\n    };\n\n    const updateList = (listName, movie) => {\n        let updatedList;\n        const hasMovie = checkList(listName, movie);\n        const savedList = getStorage(listName);\n\n        if (hasMovie) {\n            removeStorage(listName, movie);\n            updatedList = savedList.filter((el) => el.id !== movie.id);\n        } else {\n            addStorage(listName, movie);\n            updatedList = [...savedList, movie];\n        }\n\n        updateStateList(listName, updatedList);\n    };\n\n    useEffect(() => {\n        checkLists();\n    }, []);\n\n    return (\n        <Container>\n            <Image src={getImage(poster_path)} alt={original_title} />\n            <Details>\n                <h1>{original_title}</h1>\n                <p>{overview}</p>\n                <SwitchContainer>\n                    <span>Favourites:</span>\n                    <Switch\n                        checked={lists.favourite}\n                        onChange={onChangeFavourites}\n                    />\n                </SwitchContainer>\n                <SwitchContainer>\n                    <span>Watch later:</span>\n                    <Switch\n                        checked={lists.watchLater}\n                        onChange={onChangeWatchLater}\n                    />\n                </SwitchContainer>\n            </Details>\n        </Container>\n    );\n};\n\nconst checkList = (name, movie) =>\n    getStorage(name).filter((el) => el.id === movie.id).length > 0;\n\nexport default Movie;\n","import styled from 'styled-components';\nimport { device } from '../../utils/constants';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n\n    @media ${device.laptopL} {\n        padding: 10px 30px;\n    }\n`;\n","import React from 'react';\nimport Movie from '../Movie';\nimport { Container } from './styles';\n\nconst MoviesList = ({ movies, updateStateList }) => (\n    <Container>\n        {movies.map((movie) => (\n            <Movie\n                key={movie.id}\n                movie={movie}\n                updateStateList={updateStateList}\n            />\n        ))}\n    </Container>\n);\n\nexport default MoviesList;\n","const API_KEY = 'a5be41cb9776230a9edbf288fc44483d';\n\nconst getUrl = (resource, query = '') => `https://api.themoviedb.org/3${resource}?api_key=${API_KEY}${query}`;\n\nexport const getData = async (resource, query) => {\n    let result;\n\n    try {\n        const url = getUrl(resource, query);\n        const response = await fetch(url);\n        result = await response.json();\n    } catch (err) {\n        console.error(err);\n        result = null;\n    }\n\n    return result;\n};\n\nexport const getMoviesPopular = async () => getData(`/movie/popular`);\nexport const getMoviesByName = async (query) => getData(`/search/movie`, `&query=${query}`);\n","import { useState, useEffect } from 'react';\n\nexport const useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;\n","export const SET_MOVIES = 'SET_MOVIES';\nexport const SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_TABNAME = 'SET_TABNAME';\nexport const SET_DEBOUNCE_SUCCESS = 'SET_DEBOUNCE_SUCCESS';\nexport const UPDATE_STATE_LIST = 'UPDATE_STATE_LIST';\n","import {\n    SET_DEBOUNCE_SUCCESS,\n    SET_LOADING,\n    SET_MOVIES,\n    SET_SEARCH_VALUE,\n    SET_TABNAME,\n    UPDATE_STATE_LIST,\n} from './action-types';\n\nexport const initialState = {\n    favourites: [],\n    watchLater: [],\n    movies: [],\n    searchValue: '',\n    tabName: '',\n    loading: false,\n};\n\nexport const appReducer = (state, action) => {\n    switch (action.type) {\n        case SET_MOVIES:\n            return { ...state, movies: action.movies, tabName: action.tabName };\n        case SET_SEARCH_VALUE:\n            return { ...state, searchValue: action.value };\n        case SET_LOADING:\n            return { ...state, loading: action.loading };\n        case SET_TABNAME:\n            return { ...state, tabName: action.name };\n        case SET_DEBOUNCE_SUCCESS:\n            return { ...state, tabName: action.name };\n        case UPDATE_STATE_LIST:\n            console.log(action);\n            return {\n                ...state,\n                [action.listName]: action.updatedList,\n            };\n        default:\n            throw new Error();\n    }\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { Input, Tabs } from 'antd';\nimport styled from 'styled-components';\nimport MoviesList from './components/MoviesList';\nimport { getMoviesByName, getMoviesPopular } from './utils/api';\nimport { device, LIST, TABS } from './utils/constants';\nimport useDebounce from './hooks/use-debounce';\nimport { appReducer, initialState } from './reducers/app-reducer';\nimport { getStorage } from './utils/helpers';\nimport {\n    SET_LOADING,\n    SET_MOVIES,\n    SET_SEARCH_VALUE,\n    UPDATE_STATE_LIST,\n} from './reducers/action-types';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nconst App = () => {\n    const [state, dispatch] = useReducer(appReducer, initialState);\n    const debounced = useDebounce(state.searchValue, 500);\n\n    const onChange = (e) => {\n        dispatch({\n            type: SET_SEARCH_VALUE,\n            value: e.target.value,\n        });\n    };\n\n    const getMovies = (callback, query) => {\n        dispatch({\n            type: SET_LOADING,\n            loading: true,\n        });\n        callback(query).then(({ results }) => {\n            dispatch({\n                type: SET_MOVIES,\n                movies: results,\n                tabName: query ? TABS.RESULTS : TABS.POPULAR,\n            });\n            dispatch({\n                type: SET_LOADING,\n                loading: false,\n            });\n        });\n    };\n\n    const updateStateList = (listName, updatedList) => {\n        dispatch({\n            type: UPDATE_STATE_LIST,\n            listName,\n            updatedList,\n        });\n    };\n\n    useEffect(() => {\n        if (debounced) {\n            getMovies(getMoviesByName, debounced);\n        } else {\n            getMovies(getMoviesPopular);\n        }\n    }, [debounced]);\n\n    useEffect(() => {\n        updateStateList(LIST.WATCH_LATER, getStorage(LIST.WATCH_LATER));\n        updateStateList(LIST.FAVOURITES, getStorage(LIST.FAVOURITES));\n    }, []);\n\n    return (\n        <Container>\n            <StyledSearch\n                placeholder=\"input search text\"\n                size=\"large\"\n                onChange={onChange}\n                loading={state.loading}\n                allowClear\n            />\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab={state.tabName} key=\"1\">\n                    <MoviesList\n                        movies={state.movies}\n                        updateStateList={updateStateList}\n                    />\n                </TabPane>\n                <TabPane tab={TABS.FAVOURITES} key=\"2\">\n                    <MoviesList\n                        movies={state.favourites}\n                        updateStateList={updateStateList}\n                    />\n                </TabPane>\n                <TabPane tab={TABS.LATER} key=\"3\">\n                    <MoviesList\n                        movies={state.watchLater}\n                        updateStateList={updateStateList}\n                    />\n                </TabPane>\n            </Tabs>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n    width: 95%;\n    height: 100%;\n    background-color: #fff;\n    border-radius: 10px;\n    padding: 24px;\n    display: flex;\n    flex-direction: column;\n    margin: 10px auto;\n\n    @media ${device.laptop} {\n        width: 85%;\n    }\n\n    @media ${device.laptopL} {\n        margin: 50px auto;\n        width: 65%;\n    }\n`;\n\nconst StyledSearch = styled(Search)`\n    margin-bottom: 20px;\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}